#ifndef _INCLUDE_PEV_H
#define _INCLUDE_PEV_H

enum pev_pointers
{
	pev_string_start = 0,
	classname,
	globalname,
	model,
	target,
	targetname,
	netname,
	message,
	noise,
	noise1,
	noise2,
	noise3,
	pev_string_end,
	pev_edict_start,
	chain,
	dmg_inflictor,
	enemy,
	aiment,
	owner,
	groundentity,
	euser1,
	euser2,
	euser3,
	euser4,
	pev_edict_end,
	pev_float_start,
	impacttime,
	starttime,
	idealpitch,
	ideal_yaw,
	pitch_speed,
	yaw_speed,
	ltime,
	nextthink,
	gravity,
	friction,
	frame,
	animtime,
	framerate,
	scale,
	renderamt,
	health,
	frags,
	takedamage,
	max_health,
	teleport_time,
	armortype,
	armorvalue,
	dmg_take,
	dmg_save,
	dmg,
	dmgtime,
	speed,
	air_finished,
	pain_finished,
	radsuit_finished,
	maxspeed,
	fov,
	flFallVelocity,
	fuser1,
	fuser2,
	fuser3,
	fuser4,
	pev_float_end,
	pev_int_start,
	fixangle,
	modelindex,
	viewmodel,
	weaponmodel,
	movetype,
	solid,
	skin,
	body,
	effects,
	light_level,
	sequence,
	gaitsequence,
	rendermode,
	renderfx,
	weapons,
	deadflag,
	button,
	impulse,
	spawnflags,
	flags,
	colormap,
	team,
	waterlevel,
	watertype,
	playerclass,
	weaponanim,
	pushmsec,
	bInDuck,
	flTimeStepSound,
	flSwimTime,
	flDuckTime,
	iStepLeft,
	gamestate,
	oldbuttons,
	groupinfo,
	iuser1,
	iuser2,
	iuser3,
	iuser4,
	pev_int_end,
	pev_byte_start,
	controller_0,
	controller_1,
	controller_2,
	controller_3,
	blending_0,
	blending_1,
	pev_byte_end,
	pev_bytearray_start,
	controller,
	blending,
	pev_bytearray_end,
	pev_vecarray_start,
	origin,
	oldorigin,
	velocity,
	basevelocity,
	clbasevelocity,
	movedir,
	angles,
	avelocity,
	v_angle,
	endpos,
	startpos,
	absmin,
	absmax,
	mins,
	maxs,
	size,
	rendercolor,
	view_ofs,
	vuser1,
	vuser2,
	vuser3,
	vuser4,
	punchangle,
	pev_vecarray_end,
	pev_string2_begin,	/* anything after here are string corrections */
	pev_weaponmodel2,
	pev_viewmodel2,
	pev_string2_end,
	pev_edict2_start,	/* edict corrections */
	pContainingEntity,
	pev_absolute_end
};

void initialze_offsets();

#endif //_INCLUDE_PEV_H

